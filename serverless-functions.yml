createDocument:
    handler: src/functions/http/createDocument.handler
    events:
        - httpApi:
              path: /documents/new
              method: post
              authorizer:
                  name: jwtCognitoAuthorizer
getDocumentsByUser:
    handler: src/functions/http/getDocumentsByUser.handler
    events:
        - httpApi:
              path: /documents/user
              method: get
              authorizer:
                  name: jwtCognitoAuthorizer
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:Query
          Resource:
            Fn::Join:
                - "/"
                - - ${self:custom.dynamodbTableUrl}
                  - Ref: UserDocumentsTable
                  - index
                  - userId-lastAccessedAt-index
        - Effect: Allow
          Action:
              - dynamodb:GetItem
          Resource:
            Fn::Join:
                - "/"
                - - ${self:custom.dynamodbTableUrl}
                  - Ref: DocumentsTable
getDocument:
    handler: src/functions/http/getDocument.handler
    events:
        - httpApi:
              path: /documents/{id}
              method: get
              authorizer:
                  name: jwtCognitoAuthorizer
updateDocument:
    handler: src/functions/http/updateDocument.handler
    events:
        - httpApi:
              path: /documents/{id}
              method: put
              authorizer:
                  name: jwtCognitoAuthorizer
deleteDocument:
    handler: src/functions/http/deleteDocument.handler
    events:
        - httpApi:
              path: /documents/{id}
              method: delete
              authorizer:
                  name: jwtCognitoAuthorizer

websocketConnection:
    handler: src/functions/websocket/connection.handler
    events:
        - websocket:
              route: $connect
websocketDisconnection:
    handler: src/functions/websocket/disconnection.handler
    events:
        - websocket:
              route: $disconnect
websocketUpdateDocument:
    handler: src/functions/websocket/updateDocument.handler
    events:
        - websocket:
              route: updateDocument

customForgotPasswordMessage:
    handler: src/functions/cognito/customForgotPasswordMessage.handler
    events:
        - cognitoUserPool:
            pool: ${env:COGNITO_USER_POOL_NAME}
            trigger: CustomMessage
            existing: true