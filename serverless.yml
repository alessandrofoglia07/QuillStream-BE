service: QuillStream-serverless
frameworkVersion: "4"

provider:
    name: aws
    runtime: nodejs20.x
    region: us-west-1
    httpApi:
        authorizers:
            jwtCognitoAuthorizer:
                type: jwt
                identitySource: $request.header.Authorization
                issuerUrl:
                    Fn::Join:
                        - ""
                        - - https://cognito-idp.
                          - Ref: AWS::Region
                          - .amazonaws.com/
                          - Ref: CognitoUserPool
                audience:
                    - Ref: CognitoUserPoolClient
    environment:
        COGNITO_USER_POOL:
            Ref: CognitoUserPool
        COGNITO_USER_POOL_CLIENT:
            Ref: CognitoUserPoolClient
        WEBSOCKET_CONNECTIONS_TABLE:
            Ref: WebSocketConnectionsTable
        DOCUMENTS_TABLE:
            Ref: DocumentsTable
        CORS_ORIGIN: ${self:custom.corsOrigin}
        WEBSOCKET_API_ENDPOINT:
            Fn::Join:
                - ""
                - - Ref: WebsocketsApi
                  - ".execute-api"
                  - Ref: AWS::Region
                  - ".amazonaws.com/${sls:stage}"

package:
    individually: true
    patterns:
        - '!node_modules/*'

functions: ${file(./serverless-functions.yml)}

resources:
    Resources:
        CognitoUserPool:
            Type: AWS::Cognito::UserPool
            Properties:
                UserPoolName: ${sls:stage}-${self:service}
                Policies:
                    PasswordPolicy:
                        MinimumLength: 6
                        RequireLowercase: False
                        RequireNumbers: True
                        RequireSymbols: False
                        RequireUppercase: False
                UsernameAttributes:
                    - email
                AutoVerifiedAttributes:
                    - email
        CognitoUserPoolClient:
            Type: AWS::Cognito::UserPoolClient
            Properties:
                ClientName: ${sls:stage}-${self:service}-userpool-client
                GenerateSecret: False
                UserPoolId:
                    Ref: CognitoUserPool
                ExplicitAuthFlows:
                    - ALLOW_USER_PASSWORD_AUTH
                    - ALLOW_REFRESH_TOKEN_AUTH
        WebSocketConnectionsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                AttributeDefinitions:
                    - AttributeName: connectionId
                      AttributeType: S
                    - AttributeName: documentId
                      AttributeType: S
                KeySchema:
                    - AttributeName: connectionId
                      KeyType: HASH
                GlobalSecondaryIndexes:
                    - IndexName: documentId-index
                      KeySchema:
                          - AttributeName: documentId
                            KeyType: HASH
                      Projection:
                          ProjectionType: ALL
                      ProvisionedThroughput:
                            ReadCapacityUnits: 1
                            WriteCapacityUnits: 1
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
        DocumentsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                AttributeDefinitions:
                    - AttributeName: userId
                      AttributeType: S
                    - AttributeName: documentId
                      AttributeType: S 
                KeySchema:
                    - AttributeName: userId
                      KeyType: HASH
                    - AttributeName: documentId
                      KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1

plugins:
    - serverless-iam-roles-per-function

custom:
    corsOrigin: "*"
