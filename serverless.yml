service: QuillStream-serverless
frameworkVersion: "4"

provider:
    name: aws
    runtime: nodejs20.x
    region: us-west-1
    httpApi:
        authorizers:
            jwtCognitoAuthorizer:
                type: jwt
                identitySource: $request.header.Authorization
                issuerUrl:
                    Fn::Join:
                        - ""
                        - - https://cognito-idp.
                          - Ref: AWS::Region
                          - .amazonaws.com/
                          - ${env:COGNITO_USER_POOL}
                audience: ${env:COGNITO_USER_POOL_CLIENT}
        cors:
            allowedOrigins:
                - ${env:CLIENT_URL}
            allowCredentials: true
    environment:
        SERVERLESS_AWS_REGION: 
            Ref: AWS::Region
        COGNITO_USER_POOL: ${env:COGNITO_USER_POOL}
        COGNITO_USER_POOL_CLIENT: ${env:COGNITO_USER_POOL_CLIENT}
        WEBSOCKET_CONNECTIONS_TABLE:
            Ref: WebSocketConnectionsTable
        DOCUMENTS_TABLE:
            Ref: DocumentsTable
        USER_DOCUMENTS_TABLE:
            Ref: UserDocumentsTable
        CORS_ORIGIN: ${self:custom.corsOrigin} # CHANGE THIS LATER
        CLIENT_URL: ${env:CLIENT_URL}
        WSSAPIGATEWAY_ENDPOINT:
            Fn::Join:
                - ""
                - - Ref: WebsocketsApi
                  - ".execute-api."
                  - Ref: AWS::Region
                  - ".amazonaws.com/${sls:stage}"

package:
    individually: true
    patterns:
        - '!node_modules/*'

functions: ${file(./serverless-functions.yml)}

resources:
    Resources:
        ${file(./serverless-dynamodbTables.yml)}

plugins:
    - serverless-iam-roles-per-function

custom:
    corsOrigin: "*"
    dynamodbTableUrl: "arn:aws:dynamodb:${opt:region, self:provider.region}:${aws:accountId, '*'}:table"
    