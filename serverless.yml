service: QuillStream-serverless
frameworkVersion: "4"

provider:
    name: aws
    runtime: nodejs20.x
    region: us-west-1
    httpApi:
        authorizers:
            jwtCognitoAuthorizer:
                type: jwt
                identitySource: $request.header.Authorization
                issuerUrl:
                    Fn::Join:
                        - ""
                        - - https://cognito-idp.
                          - Ref: AWS::Region
                          - .amazonaws.com/
                          - ${env:COGNITO_USER_POOL}
                audience: ${env:COGNITO_USER_POOL_CLIENT}
    environment:
        COGNITO_USER_POOL: ${env:COGNITO_USER_POOL}
        COGNITO_USER_POOL_CLIENT: ${env:COGNITO_USER_POOL_CLIENT}
        COGNITO_USER_POOL_CLIENT_SECRET: ${env:COGNITO_USER_POOL_CLIENT_SECRET}
        WEBSOCKET_CONNECTIONS_TABLE:
            Ref: WebSocketConnectionsTable
        DOCUMENTS_TABLE:
            Ref: DocumentsTable
        CORS_ORIGIN: ${self:custom.corsOrigin} # CHANGE THIS LATER
        WEBSOCKET_API_ENDPOINT:
            Fn::Join:
                - ""
                - - Ref: WebsocketsApi
                  - ".execute-api"
                  - Ref: AWS::Region
                  - ".amazonaws.com/${sls:stage}"
        CLIENT_URL: ${env:CLIENT_URL}

package:
    individually: true
    patterns:
        - '!node_modules/*'

functions: ${file(./serverless-functions.yml)}

resources:
    Resources:
        WebSocketConnectionsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                AttributeDefinitions:
                    - AttributeName: connectionId
                      AttributeType: S
                    - AttributeName: documentId
                      AttributeType: S
                KeySchema:
                    - AttributeName: connectionId
                      KeyType: HASH
                GlobalSecondaryIndexes:
                    - IndexName: documentId-index
                      KeySchema:
                          - AttributeName: documentId
                            KeyType: HASH
                      Projection:
                          ProjectionType: ALL
                      ProvisionedThroughput:
                            ReadCapacityUnits: 1
                            WriteCapacityUnits: 1
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
        DocumentsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                AttributeDefinitions:
                    - AttributeName: userId
                      AttributeType: S
                    - AttributeName: documentId
                      AttributeType: S 
                KeySchema:
                    - AttributeName: userId
                      KeyType: HASH
                    - AttributeName: documentId
                      KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1

plugins:
    - serverless-iam-roles-per-function

custom:
    corsOrigin: "*"
